{"version":3,"sources":["reducers/todos.js","constants/TodoFilters.js","reducers/visibilityFilter.js","constants/ActionTypes.js","reducers/index.js","selectors/index.js","actions/index.js","components/TodoTextInput.js","components/TodoItem.js","components/TodoList.js","containers/VisibilityTodoList.js","components/Link.js","containers/FilterLink.js","components/Footer.js","components/MainSection.js","containers/MainSection.js","components/Header.js","containers/Header.js","components/App.js","index.js"],"names":["initialState","text","completed","id","visibilityFilter","state","action","type","filter","rootReducer","combineReducers","todos","reduce","maxID","todo","Math","max","map","areAllMarked","every","getTodos","getVisibleTodos","createSelector","console","log","t","Error","getCompletedTodoCount","count","addTodo","completeTodo","completeAllTodos","setVisibilityFilter","clearCompleted","deleteTodo","TodoTextInput","newTodo","onSave","placeholder","editing","useState","todoText","setTodoText","className","classnames","edit","autoFocus","value","onBlur","e","target","onChange","onKeyDown","trim","which","TodoItem","editTodo","setEditing","length","handleSave","checked","onDoubleClick","onClick","TodoList","filteredTodos","actions","key","VisibilityTodoList","connect","dispatch","bindActionCreators","TodoActions","Link","active","children","setFilter","selected","style","cursor","ownProps","FILTER_TITLES","Footer","activeCount","completedCount","onClearCompleted","itemWord","Object","keys","FilterLink","MainSection","todosCount","readOnly","Header","App","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13386d6c.chunk.js","sourcesContent":["import {\n  ADD_TODO,\n  COMPLETE_TODO,\n  COMPLETE_ALL_TODOS,\n  CLEAR_COMPLETED,\n  EDIT_TODO,\n  DELETE_TODO,\n} from \"../constants/ActionTypes\";\n\nconst initialState = [\n  {\n    text: \"Use Redux\",\n    completed: false,\n    id: 0,\n  },\n];\n\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          id: state.reduce((maxID, todo) => Math.max(todo.id, maxID), -1) + 1,\n          completed: false,\n          text: action.text,\n        },\n      ];\n\n    case COMPLETE_TODO:\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n\n    case EDIT_TODO:\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, text: action.text } : todo\n      );\n\n    case DELETE_TODO:\n      return state.filter((todo) => todo.id !== action.id);\n\n    case COMPLETE_ALL_TODOS:\n      const areAllMarked = state.every((todo) => todo.completed);\n      return state.map((todo) => ({\n        ...todo,\n        completed: !areAllMarked,\n      }));\n\n    case CLEAR_COMPLETED:\n      return state.filter((todo) => todo.completed === false);\n\n    default:\n      return state;\n  }\n}\n","export const SHOW_ALL = \"SHOW_ALL\";\nexport const SHOW_COMPLETED = \"SHOW_COMPLETED\";\nexport const SHOW_ACTIVE = \"SHOW_ACTIVE\";\n","import { SHOW_ALL } from \"../constants/TodoFilters\";\nimport { SET_VISIBILITY_FILTER } from \"../constants/ActionTypes\";\n\nconst visibilityFilter = (state = SHOW_ALL, action) => {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\nexport default visibilityFilter;","export const ADD_TODO = \"ADD_TODO\";\nexport const SET_VISIBILITY_FILTER = \"SET_VISIBILITY_FILTER\";\nexport const COMPLETE_ALL_TODOS = \"COMPLETE_ALL_TODOS\";\nexport const CLEAR_COMPLETED = \"CLEAR_COMPLETED\";\nexport const COMPLETE_TODO = \"COMPLETE_TODO\";\nexport const EDIT_TODO = \"EDIT_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\n","import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\nimport visibilityFilter from \"./visibilityFilter\";\n\nconst rootReducer = combineReducers({\n  todos,\n  visibilityFilter,\n});\n\nexport default rootReducer;\n","import { createSelector } from \"reselect\";\nimport {\n  SHOW_ACTIVE,\n  SHOW_COMPLETED,\n  SHOW_ALL,\n} from \"../constants/TodoFilters\";\n\nconst getTodos = (state) => state.todos;\nconst getVisibilityFilter = (state) => {\n  console.log(state);\n  \n  return state.visibilityFilter\n};\n\nexport const getVisibleTodos = createSelector(\n  [getVisibilityFilter, getTodos],\n  (visibilityFilter, todos) => {\n    console.log(visibilityFilter);\n    \n    switch (visibilityFilter) {\n      case SHOW_ALL:\n        return todos;\n      case SHOW_COMPLETED:\n        return todos.filter((t) => t.completed);\n      case SHOW_ACTIVE:\n        return todos.filter((t) => !t.completed);\n      default:\n        throw new Error(\"Unknown filter: \" + visibilityFilter);\n    }\n  }\n);\n\nexport const getCompletedTodoCount = createSelector([getTodos], (todos) =>\n  todos.reduce((count, todo) => (todo.completed ? count + 1 : count), 0)\n);\n","import * as types from \"../constants/ActionTypes\";\n\nexport const addTodo = (text) => ({ type: types.ADD_TODO, text });\nexport const completeTodo = (id) => ({ type: types.COMPLETE_TODO, id });\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS });\nexport const setVisibilityFilter = (filter) => ({\n  type: types.SET_VISIBILITY_FILTER,\n  filter,\n});\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED });\nexport const deleteTodo = (id) => ({ type: types.DELETE_TODO, id });\n","import React, { useState } from \"react\";\nimport classnames from \"classnames\";\n\nconst TodoTextInput = ({ newTodo, onSave, placeholder, editing }) => {\n  const [todoText, setTodoText] = useState(\"\");\n\n  const handleChange = (e) => {\n    setTodoText(e.target.value);\n  };\n\n  const handleBlur = e => {\n    if (!newTodo) {\n      onSave(e.target.value);\n    }\n  };\n\n\n  const handleSubmit = (e) => {\n    const text = e.target.value.trim();\n    if (e.which === 13) {\n      onSave(text);\n      setTodoText(\"\");\n    }\n  };\n\n  return (\n    <input\n      className={classnames({\n        edit: editing,\n        \"new-todo\": newTodo,\n      })}\n      type=\"text\"\n      placeholder={placeholder}\n      autoFocus={true}\n      value={todoText}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      onKeyDown={handleSubmit}\n    />\n  );\n};\n\nexport default TodoTextInput;\n","import React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport TodoTextInput from \"./TodoTextInput\";\n\nconst TodoItem = ({ todo, editTodo, deleteTodo, completeTodo }) => {\n  const [editing, setEditing] = useState(false);\n\n  const handleDoubleClick = () => {\n    setEditing(true);\n  };\n\n  const handleSave = (id, text) => {\n    if (text.length === 0) {\n      deleteTodo(id);\n    } else {\n      editTodo(id, text);\n    }\n    setEditing(false);\n  };\n\n  return (\n    <li\n      className={classnames({\n        completed: todo.completed,\n        editing: editing,\n      })}\n    >\n      {editing ? (\n        <TodoTextInput\n          text={todo.text}\n          editing={editing}\n          onSave={(text) => handleSave(todo.id, text)}\n        />\n      ) : (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => completeTodo(todo.id)}\n          />\n          <label onDoubleClick={handleDoubleClick}>{todo.text}</label>\n          <button className=\"destroy\" onClick={() => deleteTodo(todo.id)} />\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = ({ filteredTodos, actions }) => {\n  return (\n    <ul className=\"todo-list\">\n      {filteredTodos.map((todo) => (\n        <TodoItem key={todo} todo={todo} {...actions} />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import { getVisibleTodos } from \"../selectors\";\nimport { bindActionCreators } from \"redux\";\nimport * as TodoActions from \"../actions\";\nimport { connect } from \"react-redux\";\nimport TodoList from \"../components/TodoList\";\n\nconst mapStateToProps = (state) => ({\n  filteredTodos: getVisibleTodos(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(TodoActions, dispatch),\n});\n\nconst VisibilityTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList);\n\nexport default VisibilityTodoList;\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nconst Link = ({ active, children, setFilter }) => {\n  return (\n    <a\n      className={classnames({ selected: active })}\n      style={{ cursor: \"pointer\" }}\n      onClick={() => setFilter()}\n    >\n      {children}\n    </a>\n  );\n};\n\nexport default Link;\n","import { setVisibilityFilter } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport Link from \"../components/Link\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setFilter: () => {\n    dispatch(setVisibilityFilter(ownProps.filter));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);\n","import React from \"react\";\nimport {\n  SHOW_ALL,\n  SHOW_ACTIVE,\n  SHOW_COMPLETED,\n} from \"../constants/TodoFilters\";\nimport FilterLink from \"../containers/FilterLink\";\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: \"All\",\n  [SHOW_ACTIVE]: \"Active\",\n  [SHOW_COMPLETED]: \"Completed\",\n};\n\nconst Footer = ({ activeCount, completedCount, onClearCompleted }) => {\n  const itemWord = activeCount === 1 ? \"item\" : \"items\";\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || \"No\"}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map((filter) => (\n          <li key={filter}>\n            <FilterLink filter={filter}>{FILTER_TITLES[filter]}</FilterLink>\n          </li>\n        ))}\n      </ul>\n      {!!completedCount && (\n        <button className=\"clear-completed\" onClick={onClearCompleted}>\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport VisibilityTodoList from \"../containers/VisibilityTodoList\";\nimport Footer from \"./Footer\";\n\nconst MainSection = ({ todosCount, completedCount, actions }) => {\n  return (\n    <section className=\"main\">\n      {!!todosCount && (\n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n            readOnly\n          />\n          <label onClick={actions.completeAllTodos}></label>\n        </span>\n      )}\n      <VisibilityTodoList />\n      {!!todosCount && (\n        <Footer\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n          onClearCompleted={actions.clearCompleted}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default MainSection;\n","import { getCompletedTodoCount } from \"../selectors\";\nimport * as TodoActions from \"../actions\"\nimport { bindActionCreators } from \"redux\";\nimport {connect} from \"react-redux\"\nimport MainSection from \"../components/MainSection\";\n\nconst mapStateToProps = (state) => ({\n  todosCount: state.todos.length,\n  completedCount: getCompletedTodoCount(state)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions : bindActionCreators(TodoActions, dispatch)\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainSection)\n","import React from \"react\";\nimport TodoTextInput from \"./TodoTextInput\";\n\nconst Header = ({ addTodo }) => {\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <TodoTextInput\n        newTodo\n        onSave={(text) => {\n          if (text.length !== 0) {\n            addTodo(text);\n          }\n        }}\n        placeholder=\"What needs to be done?\"\n      />\n    </header>\n  );\n};\n\nexport default Header;\n","import { connect } from \"react-redux\";\nimport Header from \"../components/Header\";\nimport { addTodo } from \"../actions\";\n\nexport default connect(null, { addTodo })(Header);\n","import React from \"react\";\nimport MainSection from \"../containers/MainSection\";\nimport Header from \"../containers/Header\";\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <MainSection />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reducer from \"./reducers\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport 'todomvc-app-css/index.css'\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}